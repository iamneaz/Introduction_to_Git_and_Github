git rm ---> will stop the file from being tracked by git and remove it from the git directory
**File removals go through the same general workflow that we've seen. So you'll need to write a commit message as to why you've deleted them
____

git mv ---> to rename files in the repository. 
example: git mv disk_usage.py check_free_space.py
____
If there are files that get automatically generated by our scripts, or our operating system generates artifacts that we don't want in our repo, we'll want to ignore them so that they don't add noise to the output of git status. To do this, we can use the gitignore file.
Inside this file, we'll specify rules to tell git which files to skip for the current repo.